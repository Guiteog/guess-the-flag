[
    {
        "id": "0158b88ad22483b7",
        "type": "tab",
        "label": "Dados",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6882061cf9b2929f",
        "type": "tab",
        "label": "Paises",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "62fbdd8b78c30580",
        "type": "tab",
        "label": "AFK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c42e73b9cc74503b",
        "type": "tab",
        "label": "Gatilho",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f0dfa7e638edfa9",
        "type": "websocket-listener",
        "path": "/ws/retornadados",
        "wholemsg": "false"
    },
    {
        "id": "ws-reposta-client",
        "type": "websocket-client",
        "path": "/ws/resposta",
        "tls": "",
        "hb": "0",
        "subprotocol": "",
        "headers": []
    },
    {
        "id": "c01b9bc0bddef3fa",
        "type": "function",
        "z": "0158b88ad22483b7",
        "name": "function 1",
        "func": "let dados;\n\n// Tenta processar os dados do arquivo\ntry {\n    let jsonString = msg.payload.trim(); \n    let jsonObjeto = JSON.parse(jsonString); // Converte de volta para objeto\n\n    if (!Array.isArray(jsonObjeto)) {\n        jsonObjeto = [jsonObjeto]; // Se não for array, transforma em array\n    }\n\n    // Junta todos os dados em um único array\n    dados = jsonObjeto.reduce((listaJSON, item) => {\n        if (item.nome) {\n            listaJSON.push({ nome: item.nome });\n        }\n        return listaJSON;\n    }, []);\n    \n} catch (e) {\n    dados = []; // Caso de erro, cria um array vazio\n}\n\n// Adiciona o nome enviado pela URL\nlet nome = msg.req.query.nome;\nif (nome) {\n    dados.push({ nome: nome }); // Adiciona o novo nome\n}\ndados = dados.filter(nome => nome.nome !== \"nomeADM123\")\n\n// Atualiza msg.payload com o JSON atualizado\nmsg.payload = JSON.stringify(dados, null, 2); // Formatação legível\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "ee0325f2f49d3560"
            ]
        ]
    },
    {
        "id": "244ec498d9401825",
        "type": "http response",
        "z": "0158b88ad22483b7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 240,
        "wires": []
    },
    {
        "id": "b9e6a062ebc8d8b8",
        "type": "http in",
        "z": "0158b88ad22483b7",
        "name": "",
        "url": "/dados",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "0b4d5bba465f41f0"
            ]
        ]
    },
    {
        "id": "d39f637f68123038",
        "type": "file in",
        "z": "0158b88ad22483b7",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "51c2eb94f58bb998"
            ]
        ]
    },
    {
        "id": "51c2eb94f58bb998",
        "type": "json",
        "z": "0158b88ad22483b7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "95894d3e7c6ae166",
                "7224f3e7d607124a"
            ]
        ]
    },
    {
        "id": "ee0325f2f49d3560",
        "type": "file",
        "z": "0158b88ad22483b7",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "87c1c9c7b609ade8"
            ]
        ]
    },
    {
        "id": "7224f3e7d607124a",
        "type": "debug",
        "z": "0158b88ad22483b7",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 160,
        "wires": []
    },
    {
        "id": "0b4d5bba465f41f0",
        "type": "file in",
        "z": "0158b88ad22483b7",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "c01b9bc0bddef3fa"
            ]
        ]
    },
    {
        "id": "87c1c9c7b609ade8",
        "type": "json",
        "z": "0158b88ad22483b7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1010,
        "y": 240,
        "wires": [
            [
                "244ec498d9401825",
                "7224f3e7d607124a"
            ]
        ]
    },
    {
        "id": "d98ee3a3e310b20e",
        "type": "http in",
        "z": "0158b88ad22483b7",
        "name": "",
        "url": "/dadosjogador",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "cfa61dd9c6bd1ee9"
            ]
        ]
    },
    {
        "id": "9664bfe0640986b4",
        "type": "http response",
        "z": "0158b88ad22483b7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 320,
        "wires": []
    },
    {
        "id": "cfa61dd9c6bd1ee9",
        "type": "file in",
        "z": "0158b88ad22483b7",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "a216e3e8890e1315"
            ]
        ]
    },
    {
        "id": "a216e3e8890e1315",
        "type": "function",
        "z": "0158b88ad22483b7",
        "name": "ranking",
        "func": "let dados;\n\ntry {\n    let jsonString = msg.payload.trim();\n    let jsonObjeto = JSON.parse(jsonString);\n    if (!Array.isArray(jsonObjeto)) jsonObjeto = [jsonObjeto];\n\n    dados = jsonObjeto;\n} catch (e) {\n    dados = [];\n}\n\nlet nome = msg.req.query.nome;\nlet pontos = parseInt(msg.req.query.pontos);\nlet tempo = parseFloat(msg.req.query.tempo);\n\nif (nome) {\n    let jogador = dados.find(j => j.nome === nome);\n    if (jogador) {\n        if (!isNaN(pontos)) jogador.pontos = pontos;\n        if (!isNaN(tempo)) jogador.tempo = tempo;\n    } else {\n        dados.push({\n            nome: nome,\n            pontos: !isNaN(pontos) ? pontos : 0,\n            tempo: !isNaN(tempo) ? tempo : 0\n        });\n    }\n}\n\n// Remove nomeADM123 se necessário\ndados = dados.filter(j => j.nome !== \"nomeADM123\");\n\nmsg.payload = JSON.stringify(dados, null, 2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 320,
        "wires": [
            [
                "9664bfe0640986b4"
            ]
        ]
    },
    {
        "id": "d491ea9bf2d4c6b0",
        "type": "watch",
        "z": "0158b88ad22483b7",
        "name": "",
        "files": "banco.json",
        "recursive": "",
        "x": 380,
        "y": 100,
        "wires": [
            [
                "d39f637f68123038"
            ]
        ]
    },
    {
        "id": "95894d3e7c6ae166",
        "type": "websocket out",
        "z": "0158b88ad22483b7",
        "name": "",
        "server": "0f0dfa7e638edfa9",
        "client": "",
        "x": 1440,
        "y": 100,
        "wires": []
    },
    {
        "id": "f5a78af39e25687d",
        "type": "http in",
        "z": "6882061cf9b2929f",
        "name": "",
        "url": "/paises",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "9ba98cf8abeb6a15"
            ]
        ]
    },
    {
        "id": "9ba98cf8abeb6a15",
        "type": "file in",
        "z": "6882061cf9b2929f",
        "name": "",
        "filename": "C:\\Users\\Aluno\\Desktop\\projeto\\paises.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 790,
        "y": 360,
        "wires": [
            [
                "274347365bf276b2"
            ]
        ]
    },
    {
        "id": "274347365bf276b2",
        "type": "json",
        "z": "6882061cf9b2929f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 420,
        "wires": [
            [
                "51c9989f12f55c13"
            ]
        ]
    },
    {
        "id": "51c9989f12f55c13",
        "type": "http response",
        "z": "6882061cf9b2929f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "f07ea382f11f9b7d",
        "type": "http in",
        "z": "62fbdd8b78c30580",
        "name": "Recebe AFK",
        "url": "/AFK",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "0f5e32f00962c247"
            ]
        ]
    },
    {
        "id": "0f5e32f00962c247",
        "type": "json",
        "z": "62fbdd8b78c30580",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "5a33200057dbdc42",
                "fbf358ced3d2e2d5"
            ]
        ]
    },
    {
        "id": "5a33200057dbdc42",
        "type": "function",
        "z": "62fbdd8b78c30580",
        "name": "Pega jogadorId",
        "func": "msg.jogadorId = msg.payload.jogadorId;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "3325c1e72cfac5b1",
                "fbf358ced3d2e2d5"
            ]
        ]
    },
    {
        "id": "3325c1e72cfac5b1",
        "type": "file in",
        "z": "62fbdd8b78c30580",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "sendError": true,
        "allProps": false,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "a4bea6c0f0d3f0f1",
                "fbf358ced3d2e2d5"
            ]
        ]
    },
    {
        "id": "a4bea6c0f0d3f0f1",
        "type": "json",
        "z": "62fbdd8b78c30580",
        "name": "Parse para array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "a7ada3b5fb77ce86"
            ]
        ]
    },
    {
        "id": "a7ada3b5fb77ce86",
        "type": "function",
        "z": "62fbdd8b78c30580",
        "name": "Remove jogador",
        "func": "let jogadores = msg.payload;\nlet jogadorId = msg.jogadorId; // ← vem do node Function anterior\n\n// Filtra a lista, removendo o jogador com o nome igual ao jogadorId\njogadores = jogadores.filter(j => j.nome !== jogadorId);\n\n// Retorna a lista atualizada para salvar no banco.json\nmsg.payload = JSON.stringify(jogadores, null, 2);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "a2678fd1d996b104",
                "fbf358ced3d2e2d5"
            ]
        ]
    },
    {
        "id": "a2678fd1d996b104",
        "type": "file",
        "z": "62fbdd8b78c30580",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "400b22fb55f58126",
                "fbf358ced3d2e2d5"
            ]
        ]
    },
    {
        "id": "400b22fb55f58126",
        "type": "http response",
        "z": "62fbdd8b78c30580",
        "name": "Resposta OK",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 640,
        "wires": []
    },
    {
        "id": "fbf358ced3d2e2d5",
        "type": "debug",
        "z": "62fbdd8b78c30580",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "http-in-sinal",
        "type": "http in",
        "z": "c42e73b9cc74503b",
        "name": "",
        "url": "/sinal",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "1ed27176aea73985"
            ]
        ]
    },
    {
        "id": "http-in-reposta",
        "type": "http in",
        "z": "c42e73b9cc74503b",
        "name": "",
        "url": "/reposta",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "function-get-sinal"
            ]
        ]
    },
    {
        "id": "function-get-sinal",
        "type": "function",
        "z": "c42e73b9cc74503b",
        "name": "",
        "func": "const sinal = flow.get('sinal') || false;\nmsg.payload = { sinal };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "http-response-reposta"
            ]
        ]
    },
    {
        "id": "http-response-reposta",
        "type": "http response",
        "z": "c42e73b9cc74503b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "1ed27176aea73985",
        "type": "function",
        "z": "c42e73b9cc74503b",
        "name": "function 2",
        "func": "const novoSinal = msg.req.query.sinal === 'true';\nflow.set('sinal', novoSinal);\n\n// Define o payload da mensagem\nmsg.payload = { sinal: novoSinal };\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 200,
        "wires": [
            [
                "websocket-out",
                "1ece28d1050d11cf"
            ]
        ]
    },
    {
        "id": "websocket-out",
        "type": "websocket out",
        "z": "c42e73b9cc74503b",
        "name": "",
        "server": "",
        "client": "ws-reposta-client",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "1ece28d1050d11cf",
        "type": "http response",
        "z": "c42e73b9cc74503b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 160,
        "wires": []
    }
]
