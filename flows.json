[
    {
        "id": "80341690ae105087",
        "type": "tab",
        "label": "Dados",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ccf8f3476cbc1c2d",
        "type": "tab",
        "label": "Paises",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "af3fb59981efa5dd",
        "type": "tab",
        "label": "AFK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1a9733d742b99cab",
        "type": "tab",
        "label": "Gatilho",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ad6a0e1d76087265",
        "type": "websocket-listener",
        "path": "/ws/retornadados",
        "wholemsg": "false"
    },
    {
        "id": "fa0f974b1218259c",
        "type": "websocket-client",
        "path": "/ws/resposta",
        "tls": "",
        "hb": "0",
        "subprotocol": "",
        "headers": []
    },
    {
        "id": "70d5afa84c288ade",
        "type": "websocket-listener",
        "path": "/ws/rank",
        "wholemsg": "false"
    },
    {
        "id": "8c42cb475d23d41a",
        "type": "function",
        "z": "80341690ae105087",
        "name": "function 1",
        "func": "let dados = [];\n\ntry {\n    // Remove espaços e converte a string JSON em objeto\n    let jsonString = msg.payload.trim();\n    let jsonObjeto = JSON.parse(jsonString);\n\n    // Garante que é um array\n    if (!Array.isArray(jsonObjeto)) {\n        jsonObjeto = [jsonObjeto];\n    }\n\n    // Filtra apenas os objetos que têm propriedade 'nome'\n    dados = jsonObjeto.filter(item => item.nome);\n} catch (e) {\n    // Caso dê erro na leitura do JSON, inicia array vazio\n    dados = [];\n}\n\n// Pega o nome enviado na query da URL \nlet nome = msg.req.query.nome;\nif (nome) {\n    dados.push({ nome: nome });\n}\n\n// Remove o nome \"nomeADM123\" da lista\ndados = dados.filter(item => item.nome !== \"nomeADM123\");\n\n// Atualiza o payload com o array de objetos (não string JSON)\nmsg.payload = dados;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 240,
        "wires": [
            [
                "43bb9c4563668f8f"
            ]
        ]
    },
    {
        "id": "305bff1e65f48743",
        "type": "http response",
        "z": "80341690ae105087",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 240,
        "wires": []
    },
    {
        "id": "05cb3674ab434efd",
        "type": "http in",
        "z": "80341690ae105087",
        "name": "",
        "url": "/dados",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "b72ac96fe8648bf5"
            ]
        ]
    },
    {
        "id": "d23aa90a076edba9",
        "type": "file in",
        "z": "80341690ae105087",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 710,
        "y": 100,
        "wires": [
            [
                "42e2c1d503f199cc"
            ]
        ]
    },
    {
        "id": "42e2c1d503f199cc",
        "type": "json",
        "z": "80341690ae105087",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "ef0b5bebf3d012e9",
                "3cdd103c4498bbd6"
            ]
        ]
    },
    {
        "id": "43bb9c4563668f8f",
        "type": "file",
        "z": "80341690ae105087",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 240,
        "wires": [
            [
                "305bff1e65f48743"
            ]
        ]
    },
    {
        "id": "3cdd103c4498bbd6",
        "type": "debug",
        "z": "80341690ae105087",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 160,
        "wires": []
    },
    {
        "id": "b72ac96fe8648bf5",
        "type": "file in",
        "z": "80341690ae105087",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "8c42cb475d23d41a"
            ]
        ]
    },
    {
        "id": "d0b9f26c3ec5e11e",
        "type": "http in",
        "z": "80341690ae105087",
        "name": "",
        "url": "/dadosjogador",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "e5c13519a51a00e0"
            ]
        ]
    },
    {
        "id": "09299e44586a6f2b",
        "type": "file in",
        "z": "80341690ae105087",
        "name": "",
        "filename": "rank.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1540,
        "y": 460,
        "wires": [
            [
                "f9e1a3521b535c64"
            ]
        ]
    },
    {
        "id": "e5c13519a51a00e0",
        "type": "function",
        "z": "80341690ae105087",
        "name": "",
        "func": "let nome = msg.payload.nome;\nlet pontuacao = msg.payload.pontuacao;\nlet tempo = msg.payload.tempo;\n\nlet jogador = {\n    nome:nome,\n    pontuacao: pontuacao,\n    tempo: tempo,\n};\n\nmsg.jogador = jogador;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "09299e44586a6f2b",
                "4ee4d6478a3b722d"
            ]
        ]
    },
    {
        "id": "f35dcbb41bea34ab",
        "type": "watch",
        "z": "80341690ae105087",
        "name": "",
        "files": "banco.json",
        "recursive": "",
        "x": 540,
        "y": 60,
        "wires": [
            [
                "67214956d3114bb0"
            ]
        ]
    },
    {
        "id": "ef0b5bebf3d012e9",
        "type": "websocket out",
        "z": "80341690ae105087",
        "name": "",
        "server": "ad6a0e1d76087265",
        "client": "",
        "x": 1440,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f64489d761747cd",
        "type": "websocket out",
        "z": "80341690ae105087",
        "name": "",
        "server": "70d5afa84c288ade",
        "client": "",
        "x": 870,
        "y": 660,
        "wires": []
    },
    {
        "id": "6d4965066d0915c9",
        "type": "http response",
        "z": "80341690ae105087",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2110,
        "y": 460,
        "wires": []
    },
    {
        "id": "3ccd44328cfa7457",
        "type": "file in",
        "z": "80341690ae105087",
        "name": "",
        "filename": "rank.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 660,
        "wires": [
            [
                "b5982219ff9a395e",
                "3fbea20e26d18f0b"
            ]
        ]
    },
    {
        "id": "b5982219ff9a395e",
        "type": "json",
        "z": "80341690ae105087",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 660,
        "wires": [
            [
                "2f64489d761747cd",
                "981bf844aea0d645"
            ]
        ]
    },
    {
        "id": "3d3f6153ae20e1ea",
        "type": "websocket in",
        "z": "80341690ae105087",
        "name": "",
        "server": "70d5afa84c288ade",
        "client": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "3ccd44328cfa7457"
            ]
        ]
    },
    {
        "id": "f7787c3d90b0e7dd",
        "type": "watch",
        "z": "80341690ae105087",
        "name": "",
        "files": "rank.json",
        "recursive": "",
        "x": 300,
        "y": 740,
        "wires": [
            [
                "3ccd44328cfa7457"
            ]
        ]
    },
    {
        "id": "06158b1b3e30c4eb",
        "type": "http in",
        "z": "80341690ae105087",
        "name": "",
        "url": "/rank",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 600,
        "wires": [
            [
                "3ccd44328cfa7457"
            ]
        ]
    },
    {
        "id": "981bf844aea0d645",
        "type": "http response",
        "z": "80341690ae105087",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 740,
        "wires": []
    },
    {
        "id": "11f260904f1c2b42",
        "type": "websocket in",
        "z": "80341690ae105087",
        "name": "",
        "server": "ad6a0e1d76087265",
        "client": "",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "d23aa90a076edba9"
            ]
        ]
    },
    {
        "id": "3fbea20e26d18f0b",
        "type": "debug",
        "z": "80341690ae105087",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 540,
        "wires": []
    },
    {
        "id": "67214956d3114bb0",
        "type": "file in",
        "z": "80341690ae105087",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "fa7395efe6670994"
            ]
        ]
    },
    {
        "id": "fa7395efe6670994",
        "type": "json",
        "z": "80341690ae105087",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1010,
        "y": 60,
        "wires": [
            [
                "018fa3a0dbf3d360"
            ]
        ]
    },
    {
        "id": "018fa3a0dbf3d360",
        "type": "websocket out",
        "z": "80341690ae105087",
        "name": "",
        "server": "ad6a0e1d76087265",
        "client": "",
        "x": 1440,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ee4d6478a3b722d",
        "type": "debug",
        "z": "80341690ae105087",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 540,
        "wires": []
    },
    {
        "id": "7497a26f0d537871",
        "type": "debug",
        "z": "80341690ae105087",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 520,
        "wires": []
    },
    {
        "id": "f9e1a3521b535c64",
        "type": "function",
        "z": "80341690ae105087",
        "name": "function 3",
        "func": "let jogadores = [];\n\ntry {\n    jogadores = JSON.parse(msg.payload); // conteúdo do arquivo\n    if (!Array.isArray(jogadores)) {\n        jogadores = [];\n    }\n} catch (e) {\n    jogadores = [];\n}\n\njogadores.push(msg.jogador);\nmsg.payload = JSON.stringify(jogadores, null, 2);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 460,
        "wires": [
            [
                "7497a26f0d537871",
                "37d5c8ad40cf40a7"
            ]
        ]
    },
    {
        "id": "37d5c8ad40cf40a7",
        "type": "file",
        "z": "80341690ae105087",
        "name": "",
        "filename": "rank.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1980,
        "y": 460,
        "wires": [
            [
                "6d4965066d0915c9"
            ]
        ]
    },
    {
        "id": "75a9638f6e263217",
        "type": "http in",
        "z": "ccf8f3476cbc1c2d",
        "name": "",
        "url": "/paises",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "e6e09089c0bac4eb"
            ]
        ]
    },
    {
        "id": "e6e09089c0bac4eb",
        "type": "file in",
        "z": "ccf8f3476cbc1c2d",
        "name": "",
        "filename": "C:\\Users\\Aluno\\Desktop\\Dev\\paises.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 360,
        "wires": [
            [
                "54921663123ebbc1"
            ]
        ]
    },
    {
        "id": "54921663123ebbc1",
        "type": "json",
        "z": "ccf8f3476cbc1c2d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 420,
        "wires": [
            [
                "b2907f948e68de3b"
            ]
        ]
    },
    {
        "id": "b2907f948e68de3b",
        "type": "http response",
        "z": "ccf8f3476cbc1c2d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "163f0f2840dfe38a",
        "type": "http in",
        "z": "af3fb59981efa5dd",
        "name": "Recebe AFK",
        "url": "/AFK",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "77a3d8a68932833c"
            ]
        ]
    },
    {
        "id": "77a3d8a68932833c",
        "type": "json",
        "z": "af3fb59981efa5dd",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "d8290ffd1d0ad105",
                "21d889585d486666"
            ]
        ]
    },
    {
        "id": "d8290ffd1d0ad105",
        "type": "function",
        "z": "af3fb59981efa5dd",
        "name": "Pega jogadorId",
        "func": "msg.jogadorId = msg.payload.jogadorId;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "d01c0b2cdf38f26d",
                "21d889585d486666"
            ]
        ]
    },
    {
        "id": "d01c0b2cdf38f26d",
        "type": "file in",
        "z": "af3fb59981efa5dd",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "format": "utf8",
        "sendError": true,
        "allProps": false,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "fd8f12e77f1e70d2",
                "21d889585d486666"
            ]
        ]
    },
    {
        "id": "fd8f12e77f1e70d2",
        "type": "json",
        "z": "af3fb59981efa5dd",
        "name": "Parse para array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "345ce97d6f574a5c"
            ]
        ]
    },
    {
        "id": "345ce97d6f574a5c",
        "type": "function",
        "z": "af3fb59981efa5dd",
        "name": "Remove jogador",
        "func": "let jogadores = msg.payload;\nlet jogadorId = msg.jogadorId; // ← vem do node Function anterior\n\n// Filtra a lista, removendo o jogador com o nome igual ao jogadorId\njogadores = jogadores.filter(j => j.nome !== jogadorId);\n\n// Retorna a lista atualizada para salvar no banco.json\nmsg.payload = JSON.stringify(jogadores, null, 2);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "133ee2ed94d0b1e6",
                "21d889585d486666"
            ]
        ]
    },
    {
        "id": "133ee2ed94d0b1e6",
        "type": "file",
        "z": "af3fb59981efa5dd",
        "name": "",
        "filename": "banco.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "c05cb409173dcb95",
                "21d889585d486666"
            ]
        ]
    },
    {
        "id": "c05cb409173dcb95",
        "type": "http response",
        "z": "af3fb59981efa5dd",
        "name": "Resposta OK",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 640,
        "wires": []
    },
    {
        "id": "21d889585d486666",
        "type": "debug",
        "z": "af3fb59981efa5dd",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "f6c64eb997556d11",
        "type": "http in",
        "z": "1a9733d742b99cab",
        "name": "",
        "url": "/sinal",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "753f02bea4092b1d",
                "3c71b4e0f05d44f7"
            ]
        ]
    },
    {
        "id": "234046620f3dcaec",
        "type": "http in",
        "z": "1a9733d742b99cab",
        "name": "",
        "url": "/reposta",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "5dbe9458f00c3cdb",
                "3c71b4e0f05d44f7"
            ]
        ]
    },
    {
        "id": "5dbe9458f00c3cdb",
        "type": "function",
        "z": "1a9733d742b99cab",
        "name": "",
        "func": "const sinal = flow.get('sinal') || false;\nmsg.payload = { sinal };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 500,
        "wires": [
            [
                "7a26abec4dcd6157",
                "3c71b4e0f05d44f7"
            ]
        ]
    },
    {
        "id": "7a26abec4dcd6157",
        "type": "http response",
        "z": "1a9733d742b99cab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "753f02bea4092b1d",
        "type": "function",
        "z": "1a9733d742b99cab",
        "name": "function 2",
        "func": "const novoSinal = msg.req.query.sinal === 'true';\nflow.set('sinal', novoSinal);\n\n// Define o payload da mensagem\nmsg.payload = { sinal: novoSinal };\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "818f128bae01547c",
                "3c71b4e0f05d44f7"
            ]
        ]
    },
    {
        "id": "818f128bae01547c",
        "type": "websocket out",
        "z": "1a9733d742b99cab",
        "name": "",
        "server": "",
        "client": "fa0f974b1218259c",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "3c71b4e0f05d44f7",
        "type": "debug",
        "z": "1a9733d742b99cab",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 500,
        "wires": []
    }
]